{"ast":null,"code":"import _asyncToGenerator from \"/Users/bhawanabenda/javaProject/Angular/loanProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/service-calls.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\n\nfunction LoginComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.required);\n  }\n}\n\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵtemplate(2, LoginComponent_div_14_div_2_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.minlength);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport class LoginComponent {\n  constructor(formBuilder, router, service, http) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.service = service;\n    this.http = http;\n    this.submitted = false;\n    this.userType = ''; //'Banker','Applicant',''\n\n    this.newUser = {\n      usernameExists: \"false\"\n    };\n    this.vaildPassword = {\n      customer: {\n        password: \"null\"\n      }\n    };\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onReset() {\n    this.registerForm.reset();\n    this.submitted = false;\n  }\n\n  loginUser() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.submitted = true;\n\n      if (_this.registerForm.invalid) {\n        return;\n      } //here goes the service call for user's identification\n\n\n      const copy = Object.assign({}, yield _this.service.checkUsername(_this.registerForm.get('username').value));\n      console.log(copy);\n      /* if(this.validUser['usernameExists']==='true'){\n         this.vaildPassword = Object.assign(this.vaildPassword, await this.service.checkUserPassword(this.registerForm.get('password').value,this.registerForm.get('username').value));\n         console.log(this.vaildPassword);\n         if(this.vaildPassword['customer'].password===\"null\"){\n           alert(\"Invalid Password\\n\" + 'Please enter valid Password');\n         }else{\n           this.userType='Applicant';\n         }\n       }\n       */\n\n      /*else{\n          this.validUser = this.service.checkBanker(JSON.stringify(this.registerForm.username));\n          if(this.validUser===true){\n            this.vaildPassword = this.service.checkBankerPassword(JSON.stringify(this.registerForm.value['password']),JSON.stringify(this.registerForm.value['username']));\n            if(this.vaildPassword!==null){\n              this.userType='Banker';\n            }else{\n              alert(\"Invalid Password\\n\" + 'Please enter valid Password');\n            }\n      */\n\n      if (_this.userType === 'Banker') {\n        alert(\"Successfully LoggedIn\\n\" + JSON.stringify(_this.registerForm.value));\n        console.table(_this.registerForm.value);\n        console.log(_this.registerForm);\n\n        _this.router.navigate(['/home1']);\n      } else if (_this.userType === 'Applicant') {\n        alert(\"Successfully LoggedIn\\n\" + JSON.stringify(_this.registerForm.value));\n        console.table(_this.registerForm.value);\n        console.log(_this.registerForm);\n\n        _this.router.navigate(['/home']);\n      } else {\n        alert(\"Invalid User\\n\" + 'Please enter valid Username or Password');\n        console.table(_this.registerForm.value);\n        console.log(_this.registerForm);\n      }\n    })();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ServiceCallsService), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 9,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"text-center\"], [1, \"btn\", \"btn-success\", \"btn-lg\", \"px-4\", \"mr-3\"], [\"type\", \"reset\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.loginUser();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelementStart(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4);\n      i0.ɵɵelementStart(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵelementStart(16, \"button\", 11);\n      i0.ɵɵtext(17, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_18_listener() {\n        return ctx.onReset();\n      });\n      i0.ɵɵtext(19, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f.username.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.username.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.NgClass, i5.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/Users/bhawanabenda/javaProject/Angular/loanProject/src/app/components/login/login.component.ts","/Users/bhawanabenda/javaProject/Angular/loanProject/src/app/components/login/login.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormBuilder,FormGroup, Validators } from '@angular/forms';\nimport { ServiceCallsService } from 'src/app/services/service-calls.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  registerForm:FormGroup|any;\n  submitted=false;\n  userType = ''             //'Banker','Applicant',''\n  newUser = { usernameExists : \"false\" } ;\n  public vaildPassword = {\n    customer: {\n      password: \"null\"\n    }\n  };\n\n\n  constructor(private formBuilder : FormBuilder,private router:Router,private service:ServiceCallsService,private http: HttpClient) {}\n\n  ngOnInit(): void {\n\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n  });\n  }\n  \n  get f(){\n    return this.registerForm.controls;\n }\n\n onReset(){\n  this.registerForm.reset();\n  this.submitted=false;\n}\n\n  async loginUser(){\n    this.submitted = true;\n    if(this.registerForm.invalid){\n    return;\n   }\n\n    //here goes the service call for user's identification\n      const copy = Object.assign({}, await this.service.checkUsername(this.registerForm.get('username').value));\n      console.log(copy);\n     /* if(this.validUser['usernameExists']==='true'){\n        this.vaildPassword = Object.assign(this.vaildPassword, await this.service.checkUserPassword(this.registerForm.get('password').value,this.registerForm.get('username').value));\n        console.log(this.vaildPassword);\n        if(this.vaildPassword['customer'].password===\"null\"){\n          alert(\"Invalid Password\\n\" + 'Please enter valid Password'); \n        }else{\n          this.userType='Applicant';\n        }\n      }\n      */\n      /*else{\n          this.validUser = this.service.checkBanker(JSON.stringify(this.registerForm.username));\n          if(this.validUser===true){\n            this.vaildPassword = this.service.checkBankerPassword(JSON.stringify(this.registerForm.value['password']),JSON.stringify(this.registerForm.value['username']));\n            if(this.vaildPassword!==null){\n              this.userType='Banker';\n            }else{\n              alert(\"Invalid Password\\n\" + 'Please enter valid Password'); \n            }\n      */\n\n    if(this.userType==='Banker') {\n      alert(\"Successfully LoggedIn\\n\"+ JSON.stringify(this.registerForm.value));\n      console.table(this.registerForm.value);\n      console.log(this.registerForm);\n      this.router.navigate(['/home1'])\n    }\n    else if (this.userType==='Applicant') {\n      alert(\"Successfully LoggedIn\\n\"+ JSON.stringify(this.registerForm.value));\n      console.table(this.registerForm.value);\n      console.log(this.registerForm);\n      this.router.navigate(['/home'])\n    }\n    else {\n      alert(\"Invalid User\\n\" + 'Please enter valid Username or Password');\n      console.table(this.registerForm.value);\n      console.log(this.registerForm);\n    }\n  }\n\n}\n","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"loginUser()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n            <div class=\"text-center\">\n                <button class=\"btn btn-success btn-lg px-4 mr-3\">Login</button>\n                <button (click)=\"onReset()\" class=\"btn btn-warning\" type=\"reset\">Reset</button>\n            </div>\n        </form>    \n    </div>\n</div>    \n\n\n<!--\n<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" [(ngModel)]=\"username\"/><br/>\n                <label for=\"password\">Password</label>\n                <input type=\"text\" [(ngModel)]=\"password\"/><br/>\n            <div class=\"text-center\">\n                <button (click)=\"loginUser()\" class=\"btn btn-success btn-lg px-4 mr-3\">Login</button>\n                <button (click)=\"onReset()\" class=\"btn btn-warning\" type=\"reset\">Reset</button>\n            </div>\n    </div>\n</div>    \n-->"],"sourceRoot":""},"metadata":{},"sourceType":"module"}