{"ast":null,"code":"import _asyncToGenerator from \"/Users/bhawanabenda/javaProject/Angular/loanProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceCallsService {\n  constructor(http) {\n    this.http = http;\n    /* ----------------    All service calls will be here      ---------------- */\n\n    this.serviceUrl = \"http://localhost:8080/apis/application\";\n    this.applicationUrl = \"http://localhost:8080/apis/application\";\n    this.Users = {};\n    this.response = {\n      check: Boolean\n    };\n  }\n\n  getApplications() {\n    return this.http.get(this.serviceUrl);\n  }\n\n  getApplication(id) {\n    return this.http.get(this.serviceUrl + \"/\" + id);\n  }\n\n  saveApplication(application) {\n    return this.http.post(this.applicationUrl, application).pipe(map(res => {\n      return res.json();\n    }, err => {\n      console.error(err);\n    }));\n  }\n\n  checkUsername(username) {\n    this.http.get(\"http://localhost:8080/apis/users/usernameExists/\" + username).subscribe(res => {\n      console.log(\"Response\");\n      console.log(res);\n      this.response = res;\n    });\n    return this.response.check;\n  }\n\n  checkUserPassword(password, userName) {\n    this.http.get(\"http://localhost:8080/apis/users/username/\" + userName).subscribe(res => {\n      return res.customer.password;\n    });\n  }\n\n  checkBanker(username) {\n    this.http.get(\"GEThttp://localhost:8080/apis/admin/usernameExists/\" + username).subscribe(res => {\n      return res.usernameExists;\n    });\n  }\n\n  checkBankerPassword(password, userName) {\n    this.http.get(\"http://localhost:8080/apis/admin/\" + userName).subscribe(res => {\n      return res.banker.password;\n    });\n  }\n\n  saveUser(User) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"POST CALL\");\n      console.log(User);\n      return yield _this.http.post(\"http://localhost:8080/apis/users\", User).pipe(map(res => {\n        return res.json();\n      }, err => {\n        console.error(err);\n      })).toPromise();\n    })();\n  }\n\n  saveBaker(User) {}\n\n}\n\nServiceCallsService.ɵfac = function ServiceCallsService_Factory(t) {\n  return new (t || ServiceCallsService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nServiceCallsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceCallsService,\n  factory: ServiceCallsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/bhawanabenda/javaProject/Angular/loanProject/src/app/services/service-calls.service.ts"],"names":[],"mappings":";AAEA,SAAS,GAAT,QAAoB,gBAApB;;;AAOA,OAAM,MAAO,mBAAP,CAA0B;AAE9B,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AACpB;;AACA,SAAA,UAAA,GAAkB,wCAAlB;AACA,SAAA,cAAA,GAAsB,wCAAtB;AACA,SAAA,KAAA,GAAM,EAAN;AACA,SAAA,QAAA,GAAW;AACT,MAAA,KAAK,EAAC;AADG,KAAX;AALyC;;AAUlC,EAAA,eAAe,GAAA;AACpB,WAAO,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,UAAnB,CAAP;AACD;;AAEM,EAAA,cAAc,CAAC,EAAD,EAAU;AAC7B,WAAO,KAAK,IAAL,CAAU,GAAV,CAAc,KAAK,UAAL,GAAgB,GAAhB,GAAoB,EAAlC,CAAP;AACD;;AAEM,EAAA,eAAe,CAAC,WAAD,EAAgB;AAClC,WAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,cAApB,EAAmC,WAAnC,EAAgD,IAAhD,CACL,GAAG,CAAE,GAAD,IAAW;AACb,aAAO,GAAG,CAAC,IAAJ,EAAP;AACD,KAFE,EAEA,GAAD,IAAY;AACZ,MAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACD,KAJE,CADE,CAAP;AAOH;;AAEM,EAAA,aAAa,CAAC,QAAD,EAAgB;AACjC,SAAK,IAAL,CAAU,GAAV,CAAc,qDAAmD,QAAjE,EAA2E,SAA3E,CAAsF,GAAD,IAAW;AAC9F,MAAA,OAAO,CAAC,GAAR,CAAY,UAAZ;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA,WAAK,QAAL,GAAgB,GAAhB;AACA,KAJF;AAKC,WAAO,KAAK,QAAL,CAAc,KAArB;AACH;;AAGM,EAAA,iBAAiB,CAAC,QAAD,EAAiB,QAAjB,EAAgC;AACtD,SAAK,IAAL,CAAU,GAAV,CAAc,+CAA6C,QAA3D,EAAqE,SAArE,CAAgF,GAAD,IAAW;AACpF,aAAO,GAAG,CAAC,QAAJ,CAAa,QAApB;AACL,KAFD;AAGD;;AAEM,EAAA,WAAW,CAAC,QAAD,EAAgB;AAChC,SAAK,IAAL,CAAU,GAAV,CAAc,wDAAsD,QAApE,EAA8E,SAA9E,CAAyF,GAAD,IAAW;AACjG,aAAO,GAAG,CAAC,cAAX;AACC,KAFH;AAGD;;AAEM,EAAA,mBAAmB,CAAC,QAAD,EAAiB,QAAjB,EAAgC;AACxD,SAAK,IAAL,CAAU,GAAV,CAAc,sCAAoC,QAAlD,EAA4D,SAA5D,CAAuE,GAAD,IAAW;AAC3E,aAAO,GAAG,CAAC,MAAJ,CAAW,QAAlB;AACL,KAFD;AAGD;;AAEY,EAAA,QAAQ,CAAC,IAAD,EAAS;AAAA;;AAAA;AAC5B,MAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,mBAAa,KAAI,CAAC,IAAL,CAAU,IAAV,CAAe,kCAAf,EAAkD,IAAlD,EAAwD,IAAxD,CACX,GAAG,CAAE,GAAD,IAAW;AACb,eAAO,GAAG,CAAC,IAAJ,EAAP;AACD,OAFE,EAEA,GAAD,IAAY;AACZ,QAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACD,OAJE,CADQ,EAMX,SANW,EAAb;AAH4B;AAU7B;;AAEM,EAAA,SAAS,CAAC,IAAD,EAAS,CAExB;;AAxE6B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAnB,mB;AAAmB,EAAA,OAAA,EAAnB,mBAAmB,CAAA,I;AAAA,EAAA,UAAA,EAFlB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceCallsService {\n\n  constructor(private http: HttpClient) { }\n  /* ----------------    All service calls will be here      ---------------- */\n  serviceUrl:string=\"http://localhost:8080/apis/application\";\n  applicationUrl:string=\"http://localhost:8080/apis/application\";\n  Users={}\n  response = {\n    check:Boolean\n  }\n\n\n  public getApplications() {\n    return this.http.get(this.serviceUrl);\n  }\n\n  public getApplication(id:number):any{\n    return this.http.get(this.serviceUrl+\"/\"+id);\n  }\n\n  public saveApplication(application:any){\n      return this.http.post(this.applicationUrl,application).pipe(\n        map((res:any)=>{\n          return res.json();\n        },(err: any)=>{\n          console.error(err);\n        })\n      );\n  }\n\n  public checkUsername(username:string):any{\n     this.http.get(\"http://localhost:8080/apis/users/usernameExists/\"+username).subscribe((res:any)=>{\n       console.log(\"Response\");\n       console.log(res);\n       this.response = res; \n      });\n      return this.response.check;\n  }\n\n\n  public checkUserPassword(password:string,userName:string):any{\n    this.http.get(\"http://localhost:8080/apis/users/username/\"+userName).subscribe((res:any)=>{\n          return res.customer.password;\n    });\n  }\n\n  public checkBanker(username:string):any{\n    this.http.get(\"GEThttp://localhost:8080/apis/admin/usernameExists/\"+username).subscribe((res:any)=>{\n      return res.usernameExists;\n      });\n  }\n\n  public checkBankerPassword(password:string,userName:string):any{\n    this.http.get(\"http://localhost:8080/apis/admin/\"+userName).subscribe((res:any)=>{\n          return res.banker.password;\n    });\n  }\n\n  public async saveUser(User:any){\n    console.log(\"POST CALL\")\n    console.log(User)\n    return await this.http.post(\"http://localhost:8080/apis/users\",User).pipe(\n      map((res:any)=>{\n        return res.json();\n      },(err: any)=>{\n        console.error(err);\n      })\n    ).toPromise();\n  }\n\n  public saveBaker(User:any){\n\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}